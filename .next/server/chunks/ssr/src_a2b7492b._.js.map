{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/stores/userStore.ts"],"sourcesContent":["import { createStore } from \"zustand/vanilla\"\r\nimport { User } from \"../entities/User/User\"\r\n\r\nexport type UserState = {\r\n  user: User | null\r\n}\r\n\r\nexport type UserActions = {\r\n  setUser: (user: User) => void\r\n}\r\n\r\nexport type UserStore = UserState & UserActions\r\n\r\nexport const defaultInitState: UserState = {\r\n  user: null,\r\n}\r\n\r\nexport const createUserStore = (initState: UserState = defaultInitState) => {\r\n  return createStore<UserStore>()(set => ({\r\n    ...initState,\r\n    setUser: payload => set(() => ({ user: payload })),\r\n  }))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAaO,MAAM,mBAA8B;IACzC,MAAM;AACR;AAEO,MAAM,kBAAkB,CAAC,YAAuB,gBAAgB;IACrE,OAAO,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD,IAAe,CAAA,MAAO,CAAC;YACtC,GAAG,SAAS;YACZ,SAAS,CAAA,UAAW,IAAI,IAAM,CAAC;wBAAE,MAAM;oBAAQ,CAAC;QAClD,CAAC;AACH","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/providers/userProvider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { type ReactNode, createContext, useRef, useContext } from \"react\"\r\nimport { useStore } from \"zustand\"\r\n\r\nimport { createUserStore, UserState, UserStore } from \"../stores/userStore\"\r\n\r\nexport type UserStoreApi = ReturnType<typeof createUserStore>\r\n\r\nexport const UserStoreContext = createContext<UserStoreApi | undefined>(undefined)\r\n\r\nexport interface UserStoreProviderProps {\r\n  children: ReactNode\r\n  initState?: UserState\r\n}\r\n\r\nexport const UserStoreProvider = ({ children, initState }: UserStoreProviderProps) => {\r\n  const storeRef = useRef<UserStoreApi | null>(null)\r\n  if (storeRef.current === null) {\r\n    storeRef.current = createUserStore(initState)\r\n  }\r\n\r\n  return <UserStoreContext.Provider value={storeRef.current}>{children}</UserStoreContext.Provider>\r\n}\r\n\r\nexport const useUserStore = <T,>(selector: (store: UserStore) => T): T => {\r\n  const userStoreContext = useContext(UserStoreContext)\r\n\r\n  if (!userStoreContext) {\r\n    throw new Error(`useUserStore must be used within UserStoreProvider`)\r\n  }\r\n\r\n  return useStore(userStoreContext, selector)\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AASO,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA4B;AAOjE,MAAM,oBAAoB,CAAC,EAAE,QAAQ,EAAE,SAAS,EAA0B;IAC/E,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAuB;IAC7C,IAAI,SAAS,OAAO,KAAK,MAAM;QAC7B,SAAS,OAAO,GAAG,CAAA,GAAA,oIAAA,CAAA,kBAAe,AAAD,EAAE;IACrC;IAEA,qBAAO,8OAAC,iBAAiB,QAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC9D;AAEO,MAAM,eAAe,CAAK;IAC/B,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAEpC,IAAI,CAAC,kBAAkB;QACrB,MAAM,IAAI,MAAM,CAAC,kDAAkD,CAAC;IACtE;IAEA,OAAO,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,kBAAkB;AACpC","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/entities/RoleEnum/UserRoleEnum.ts"],"sourcesContent":["export enum UserRoleEnum {\r\n  ADMIN = \"ADMIN\",\r\n  STUDENT = \"STUDENT\",\r\n  PROFESSOR = \"PROFESSOR\",\r\n}\r\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,sCAAA;;;;WAAA","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/router/routesEnum.ts"],"sourcesContent":["export enum RoutesEnum {\r\n  HOME = \"/\",\r\n  LOGIN = \"/auth/login\",\r\n  REGISTRATION = \"/auth/register\",\r\n  TICKETS = \"/home/tickets\",\r\n  REQUESTS = \"/requests\",\r\n}\r\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,oCAAA;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/widgets/Sidebar/types/items.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { RoutesEnum } from \"../../../shared/router/routesEnum\"\r\nimport { HeartOutlined, FileAddOutlined } from \"@ant-design/icons\"\r\n\r\nexport const MenuItems = [\r\n  {\r\n    key: \"tickets\",\r\n    label: <Link href={RoutesEnum.TICKETS}>Больничные</Link>,\r\n    icon: <HeartOutlined />,\r\n  },\r\n  {\r\n    key: \"requests\",\r\n    label: <Link href={RoutesEnum.REQUESTS}>Заявки</Link>,\r\n    icon: <FileAddOutlined />,\r\n  },\r\n]\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;;;;;AAEO,MAAM,YAAY;IACvB;QACE,KAAK;QACL,qBAAO,8OAAC,4JAAA,CAAA,UAAI;YAAC,MAAM,qIAAA,CAAA,aAAU,CAAC,OAAO;sBAAE;;;;;;QACvC,oBAAM,8OAAC,oNAAA,CAAA,gBAAa;;;;;IACtB;IACA;QACE,KAAK;QACL,qBAAO,8OAAC,4JAAA,CAAA,UAAI;YAAC,MAAM,qIAAA,CAAA,aAAU,CAAC,QAAQ;sBAAE;;;;;;QACxC,oBAAM,8OAAC,wNAAA,CAAA,kBAAe;;;;;IACxB;CACD","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/widgets/Sidebar/ui/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Menu } from \"antd\"\r\nimport { useUserStore } from \"../../../shared/providers/userProvider\"\r\nimport { UserRoleEnum } from \"../../../shared/entities/RoleEnum/UserRoleEnum\"\r\nimport { MenuItems } from \"../types/items\"\r\n\r\nexport const TopBarMenu = () => {\r\n  const { user } = useUserStore(state => state)\r\n\r\n  let MenuItemsRoles = user?.role === UserRoleEnum.ADMIN ? MenuItems : MenuItems.slice(0, 0)\r\n\r\n  return (\r\n    <Menu\r\n      mode='horizontal'\r\n      items={MenuItemsRoles}\r\n    />\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,MAAM,aAAa;IACxB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,eAAY,AAAD,EAAE,CAAA,QAAS;IAEvC,IAAI,iBAAiB,MAAM,SAAS,qJAAA,CAAA,eAAY,CAAC,KAAK,GAAG,4IAAA,CAAA,YAAS,GAAG,4IAAA,CAAA,YAAS,CAAC,KAAK,CAAC,GAAG;IAExF,qBACE,8OAAC,8KAAA,CAAA,OAAI;QACH,MAAK;QACL,OAAO;;;;;;AAGb","debugId":null}}]
}