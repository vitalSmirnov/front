{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/shared/utils/getJwtTokenOnServer.ts"],"sourcesContent":["import { cookies } from \"next/headers\"\r\n\r\nexport async function getJwtTokenOnServer() {\r\n  if (typeof window !== \"undefined\") return undefined\r\n  const cookieStore = await cookies()\r\n  return cookieStore.get(\"accessToken\")?.value\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,eAAe;IACpB;;IACA,MAAM,cAAc,MAAM,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAChC,OAAO,YAAY,GAAG,CAAC,gBAAgB;AACzC"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/shared/middlewares/authMiddleware.ts"],"sourcesContent":["import { NextRequest } from \"next/server\"\r\nimport { NextResponse } from \"next/server\"\r\nimport { getJwtTokenOnServer } from \"../utils/getJwtTokenOnServer\"\r\n\r\nexport async function authMiddleware(request: NextRequest) {\r\n  const { pathname } = request.nextUrl\r\n  const headers = request.headers\r\n\r\n  const includedPaths = [\"/login\", \"/register\"]\r\n\r\n  if (!includedPaths.includes(pathname)) {\r\n    return NextResponse.next()\r\n  }\r\n  const token = await getJwtTokenOnServer()\r\n\r\n  const response = NextResponse.next({\r\n    headers: { ...headers, Authorization: \"Bearer \" + token },\r\n  })\r\n\r\n  if (token) {\r\n    return NextResponse.redirect(new URL(request.url))\r\n  }\r\n\r\n  return response\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;;;AAEO,eAAe,eAAe,OAAoB;IACvD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,UAAU,QAAQ,OAAO;IAE/B,MAAM,gBAAgB;QAAC;QAAU;KAAY;IAE7C,IAAI,CAAC,cAAc,QAAQ,CAAC,WAAW;QACrC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IACA,MAAM,QAAQ,MAAM,CAAA,GAAA,qJAAA,CAAA,sBAAmB,AAAD;IAEtC,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACjC,SAAS;YAAE,GAAG,OAAO;YAAE,eAAe,YAAY;QAAM;IAC1D;IAEA,IAAI,OAAO;QACT,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,GAAG;IAClD;IAEA,OAAO;AACT"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\nimport type { NextRequest } from \"next/server\"\r\nimport { authMiddleware } from \"./src/shared/middlewares/authMiddleware\"\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const authResponse = authMiddleware(request)\r\n  if (authResponse) return authResponse\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */\r\n    \"/((?!api|_next/static|_next/image|favicon.ico).*)\",\r\n  ],\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,eAAe,CAAA,GAAA,sJAAA,CAAA,iBAAc,AAAD,EAAE;IACpC,IAAI,cAAc,OAAO;IAEzB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}