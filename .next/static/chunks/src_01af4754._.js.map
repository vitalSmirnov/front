{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/router/routesEnum.ts"],"sourcesContent":["export enum RoutesEnum {\r\n  HOME = \"/\",\r\n  LOGIN = \"/auth/login\",\r\n  REGISTRATION = \"/auth/register\",\r\n  TICKETS = \"/home/tickets\",\r\n  REQUESTS = \"/requests\",\r\n}\r\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,oCAAA;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/api/index.ts"],"sourcesContent":["import { message } from \"antd\"\r\nimport axios from \"axios\"\r\n\r\nexport const AxiosInstance = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_REDIRECT_URL,\r\n})\r\n\r\nAxiosInstance.interceptors.request.use(\r\n  config => {\r\n    const token = sessionStorage.getItem(\"accessToken\")\r\n    if (token) (config.headers as any).Authorization = `Bearer ${token}`\r\n\r\n    config.headers[\"Content-Type\"] = \"application/json\"\r\n\r\n    return config\r\n  },\r\n  error => {\r\n    message.error(\"Request error: \" + error.message)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nAxiosInstance.interceptors.response.use(\r\n  response => {\r\n    return response\r\n  },\r\n  async error => {\r\n    const originalRequest = error.config\r\n    if (\r\n      error.response?.status === 401 &&\r\n      !originalRequest.url.includes(\"/api/auth/login\") &&\r\n      !originalRequest.url.includes(\"/api/auth/refresh\") &&\r\n      !originalRequest.url.includes(\"/api/auth/register\") &&\r\n      !originalRequest._retry\r\n    ) {\r\n      originalRequest._retry = true\r\n      try {\r\n        const refreshRes = await AxiosInstance.post(\"/api/auth/refresh\", {\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        })\r\n        const newToken = refreshRes.data.accessToken\r\n        sessionStorage.setItem(\"accessToken\", newToken)\r\n        // ensure headers before mutation\r\n        if (!originalRequest.headers) originalRequest.headers = {}\r\n        ;(originalRequest.headers as any).Authorization = `Bearer ${newToken}`\r\n        return AxiosInstance(originalRequest)\r\n      } catch (refreshError) {\r\n        console.error(\"Failed to refresh token\", refreshError)\r\n        return Promise.reject(refreshError)\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n"],"names":[],"mappings":";;;AAIW;AAJX;AACA;;;AAEO,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,OAAO;AACT;AAEA,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAA;IACE,MAAM,QAAQ,eAAe,OAAO,CAAC;IACrC,IAAI,OAAO,AAAC,OAAO,OAAO,CAAS,aAAa,GAAG,AAAC,UAAe,OAAN;IAE7D,OAAO,OAAO,CAAC,eAAe,GAAG;IAEjC,OAAO;AACT,GACA,CAAA;IACE,uLAAA,CAAA,UAAO,CAAC,KAAK,CAAC,oBAAoB,MAAM,OAAO;IAC/C,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAA;IACE,OAAO;AACT,GACA,OAAM;QAGF;IAFF,MAAM,kBAAkB,MAAM,MAAM;IACpC,IACE,EAAA,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,MAAM,MAAK,OAC3B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,sBAC9B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,wBAC9B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,yBAC9B,CAAC,gBAAgB,MAAM,EACvB;QACA,gBAAgB,MAAM,GAAG;QACzB,IAAI;YACF,MAAM,aAAa,MAAM,cAAc,IAAI,CAAC,qBAAqB;gBAC/D,cAAc,aAAa,OAAO,CAAC;YACrC;YACA,MAAM,WAAW,WAAW,IAAI,CAAC,WAAW;YAC5C,eAAe,OAAO,CAAC,eAAe;YACtC,iCAAiC;YACjC,IAAI,CAAC,gBAAgB,OAAO,EAAE,gBAAgB,OAAO,GAAG,CAAC;YACvD,gBAAgB,OAAO,CAAS,aAAa,GAAG,AAAC,UAAkB,OAAT;YAC5D,OAAO,cAAc;QACvB,EAAE,OAAO,cAAc;YACrB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,QAAQ,MAAM,CAAC;QACxB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/api/index.tsx"],"sourcesContent":["import { AxiosInstance } from \"../../../shared/api\"\r\nimport { TokenResponse } from \"../../LoginUser/types\"\r\nimport { CourseWithoutUsers, GroupWithoutUsers, RegisterCredentials } from \"../types\"\r\nimport { Course } from \"../../../shared/entities/Course/course\"\r\nimport { Group } from \"../../../shared/entities/Group/group\"\r\n\r\nexport const registerRequest = async (credentials: RegisterCredentials): Promise<TokenResponse> => {\r\n  return await AxiosInstance.post(`auth/register`, {\r\n    ...credentials,\r\n  })\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error register user:\", error)\r\n      return error\r\n    })\r\n}\r\nexport const getGroups = async (): Promise<GroupWithoutUsers[]> => {\r\n  return await AxiosInstance.get(`groups`)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error fetching tickets:\", error)\r\n      return error\r\n    })\r\n}\r\nexport const getCourses = async (): Promise<CourseWithoutUsers[]> => {\r\n  return await AxiosInstance.get(`courses`)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error fetching tickets:\", error)\r\n      return error\r\n    })\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;AAMO,MAAM,kBAAkB,OAAO;IACpC,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,IAAI,CAAE,iBAAgB;QAC/C,GAAG,WAAW;IAChB,GACG,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;AACJ;AACO,MAAM,YAAY;IACvB,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,GAAG,CAAE,UAC7B,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACJ;AACO,MAAM,aAAa;IACxB,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,GAAG,CAAE,WAC7B,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACJ","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/UserForm/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport FormItem from \"antd/es/form/FormItem\"\r\n\r\nimport { Form, FormProps, Input } from \"antd\"\r\n\r\nexport const UserForm: React.FC<FormProps> = ({ ...props }) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        {...props}\r\n        layout='vertical'\r\n      >\r\n        <FormItem\r\n          label={\"Логин\"}\r\n          name='login'\r\n          required\r\n        >\r\n          <Input\r\n            type='email'\r\n            placeholder='username@gmail.com'\r\n          />\r\n        </FormItem>\r\n        <FormItem\r\n          label={\"ФИО\"}\r\n          name='name'\r\n          required\r\n        >\r\n          <Input\r\n            type='text'\r\n            placeholder='Иванов Иван Иванович'\r\n          />\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAAA;AAJA;;;;AAMO,MAAM,WAAgC;QAAC,EAAE,GAAG,OAAO;IACxD,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI;YACF,GAAG,KAAK;YACT,QAAO;;8BAEP,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;8BAER,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;;;;;;;;;;;8BAGhB,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;8BAER,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;;;;;;;;;;;;;;;;;;AAMxB;KA9Ba","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"antd/es/form/Form\"\r\nimport { Button, Form, message } from \"antd\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport { RoutesEnum } from \"../../../shared/router/routesEnum\"\r\nimport { RegisterCredentials } from \"../types\"\r\nimport { registerRequest } from \"../api\"\r\nimport { LeftOutlined } from \"@ant-design/icons\"\r\nimport { UserForm } from \"./UserForm\"\r\n\r\nexport const RegisterUserUI = () => {\r\n  const [isLoading, setLoading] = useState<boolean>(false)\r\n  const [currentForm, setCurrentForm] = useState<\"userForm\" | \"dataForm\" | \"passwordForm\">(\"userForm\")\r\n  const [form] = useForm<RegisterCredentials>()\r\n\r\n  const router = useRouter()\r\n\r\n  const LogInHandler = () => {\r\n    router.push(RoutesEnum.LOGIN)\r\n  }\r\n  const BackButtonHandler = () => {\r\n    router.push(RoutesEnum.LOGIN)\r\n  }\r\n\r\n  const successAction = async () => {\r\n    const payload = await form.validateFields()\r\n    setLoading(true)\r\n    registerRequest(payload)\r\n      .then(() => {\r\n        router.push(RoutesEnum.HOME)\r\n      })\r\n      .catch(error => {\r\n        message.error(error.message || \"Ошибка регистрации\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Provider\r\n        onFormFinish={name => {\r\n          if (name === \"passwordForm\") successAction()\r\n        }}\r\n      >\r\n        {currentForm === \"userForm\" ? (\r\n          <UserForm />\r\n        ) : currentForm === \"dataForm\" ? (\r\n          <DataUserForm\r\n            form={form}\r\n            setCurrentForm={setCurrentForm}\r\n          />\r\n        ) : (\r\n          <PasswordForm\r\n            form={form}\r\n            setCurrentForm={setCurrentForm}\r\n          />\r\n        )}\r\n        <Button\r\n          onClick={BackButtonHandler}\r\n          htmlType='submit'\r\n        >\r\n          <LeftOutlined />\r\n        </Button>\r\n        <Button\r\n          block\r\n          color='default'\r\n          onClick={LogInHandler}\r\n          htmlType='submit'\r\n        >\r\n          Далее\r\n        </Button>\r\n      </Form.Provider>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAVA;;;;;;;;;AAYO,MAAM,iBAAiB;;IAC5B,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4C;IACzF,MAAM,CAAC,KAAK,GAAG,CAAA,GAAA,+LAAA,CAAA,UAAO,AAAD;IAErB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,OAAO,IAAI,CAAC,wIAAA,CAAA,aAAU,CAAC,KAAK;IAC9B;IACA,MAAM,oBAAoB;QACxB,OAAO,IAAI,CAAC,wIAAA,CAAA,aAAU,CAAC,KAAK;IAC9B;IAEA,MAAM,gBAAgB;QACpB,MAAM,UAAU,MAAM,KAAK,cAAc;QACzC,WAAW;QACX,CAAA,GAAA,mJAAA,CAAA,kBAAe,AAAD,EAAE,SACb,IAAI,CAAC;YACJ,OAAO,IAAI,CAAC,wIAAA,CAAA,aAAU,CAAC,IAAI;QAC7B,GACC,KAAK,CAAC,CAAA;YACL,uLAAA,CAAA,UAAO,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;QACjC,GACC,OAAO,CAAC;YACP,WAAW;QACb;IACJ;IAEA,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI,CAAC,QAAQ;YACZ,cAAc,CAAA;gBACZ,IAAI,SAAS,gBAAgB;YAC/B;;gBAEC,gBAAgB,2BACf,6LAAC,8JAAA,CAAA,WAAQ;;;;+DACP,gBAAgB,2BAClB,6LAAC;oBACC,MAAM;oBACN,gBAAgB;;;;;6EAGlB,6LAAC;oBACC,MAAM;oBACN,gBAAgB;;;;;;8BAGpB,6LAAC,qMAAA,CAAA,SAAM;oBACL,SAAS;oBACT,UAAS;8BAET,cAAA,6LAAC,qNAAA,CAAA,eAAY;;;;;;;;;;8BAEf,6LAAC,qMAAA,CAAA,SAAM;oBACL,KAAK;oBACL,OAAM;oBACN,SAAS;oBACT,UAAS;8BACV;;;;;;;;;;;;;AAMT;GAlEa;;QAGI,+LAAA,CAAA,UAAO;QAEP,qIAAA,CAAA,YAAS;;;KALb","debugId":null}}]
}