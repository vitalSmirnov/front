{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/router/routesEnum.ts"],"sourcesContent":["export enum RoutesEnum {\r\n  HOME = \"/\",\r\n  LOGIN = \"/auth/login\",\r\n  REGISTRATION = \"/auth/register\",\r\n  TICKETS = \"/home/tickets\",\r\n  REQUESTS = \"/requests\",\r\n}\r\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,oCAAA;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/shared/api/index.ts"],"sourcesContent":["import { message } from \"antd\"\r\nimport axios from \"axios\"\r\n\r\nexport const AxiosInstance = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_REDIRECT_URL,\r\n})\r\n\r\nAxiosInstance.interceptors.request.use(\r\n  config => {\r\n    const token = sessionStorage.getItem(\"accessToken\")\r\n    if (token) (config.headers as any).Authorization = `Bearer ${token}`\r\n\r\n    config.headers[\"Content-Type\"] = \"application/json\"\r\n\r\n    return config\r\n  },\r\n  error => {\r\n    message.error(\"Request error: \" + error.message)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nAxiosInstance.interceptors.response.use(\r\n  response => {\r\n    return response\r\n  },\r\n  async error => {\r\n    const originalRequest = error.config\r\n    if (\r\n      error.response?.status === 401 &&\r\n      !originalRequest.url.includes(\"/api/auth/login\") &&\r\n      !originalRequest.url.includes(\"/api/auth/refresh\") &&\r\n      !originalRequest.url.includes(\"/api/auth/register\") &&\r\n      !originalRequest._retry\r\n    ) {\r\n      originalRequest._retry = true\r\n      try {\r\n        const refreshRes = await AxiosInstance.post(\"/api/auth/refresh\", {\r\n          refreshToken: localStorage.getItem(\"refreshToken\"),\r\n        })\r\n        const newToken = refreshRes.data.accessToken\r\n        sessionStorage.setItem(\"accessToken\", newToken)\r\n        // ensure headers before mutation\r\n        if (!originalRequest.headers) originalRequest.headers = {}\r\n        ;(originalRequest.headers as any).Authorization = `Bearer ${newToken}`\r\n        return AxiosInstance(originalRequest)\r\n      } catch (refreshError) {\r\n        console.error(\"Failed to refresh token\", refreshError)\r\n        return Promise.reject(refreshError)\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n"],"names":[],"mappings":";;;AAIW;AAJX;AACA;;;AAEO,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,OAAO;AACT;AAEA,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAA;IACE,MAAM,QAAQ,eAAe,OAAO,CAAC;IACrC,IAAI,OAAO,AAAC,OAAO,OAAO,CAAS,aAAa,GAAG,AAAC,UAAe,OAAN;IAE7D,OAAO,OAAO,CAAC,eAAe,GAAG;IAEjC,OAAO;AACT,GACA,CAAA;IACE,uLAAA,CAAA,UAAO,CAAC,KAAK,CAAC,oBAAoB,MAAM,OAAO;IAC/C,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAA;IACE,OAAO;AACT,GACA,OAAM;QAGF;IAFF,MAAM,kBAAkB,MAAM,MAAM;IACpC,IACE,EAAA,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,MAAM,MAAK,OAC3B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,sBAC9B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,wBAC9B,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,yBAC9B,CAAC,gBAAgB,MAAM,EACvB;QACA,gBAAgB,MAAM,GAAG;QACzB,IAAI;YACF,MAAM,aAAa,MAAM,cAAc,IAAI,CAAC,qBAAqB;gBAC/D,cAAc,aAAa,OAAO,CAAC;YACrC;YACA,MAAM,WAAW,WAAW,IAAI,CAAC,WAAW;YAC5C,eAAe,OAAO,CAAC,eAAe;YACtC,iCAAiC;YACjC,IAAI,CAAC,gBAAgB,OAAO,EAAE,gBAAgB,OAAO,GAAG,CAAC;YACvD,gBAAgB,OAAO,CAAS,aAAa,GAAG,AAAC,UAAkB,OAAT;YAC5D,OAAO,cAAc;QACvB,EAAE,OAAO,cAAc;YACrB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,QAAQ,MAAM,CAAC;QACxB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/api/index.tsx"],"sourcesContent":["import { AxiosInstance } from \"../../../shared/api\"\r\nimport { TokenResponse } from \"../../LoginUser/types\"\r\nimport { CourseWithoutUsers, GroupWithoutUsers, RegisterCredentials } from \"../types\"\r\nimport { Course } from \"../../../shared/entities/Course/course\"\r\nimport { Group } from \"../../../shared/entities/Group/group\"\r\n\r\nexport const registerRequest = async (credentials: RegisterCredentials): Promise<TokenResponse> => {\r\n  return await AxiosInstance.post(`auth/register`, {\r\n    ...credentials,\r\n  })\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error register user:\", error)\r\n      return error\r\n    })\r\n}\r\nexport const getGroups = async (): Promise<GroupWithoutUsers[]> => {\r\n  return await AxiosInstance.get(`groups`)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error fetching tickets:\", error)\r\n      return error\r\n    })\r\n}\r\nexport const getCourses = async (): Promise<CourseWithoutUsers[]> => {\r\n  return await AxiosInstance.get(`courses`)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error fetching tickets:\", error)\r\n      return error\r\n    })\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;AAMO,MAAM,kBAAkB,OAAO;IACpC,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,IAAI,CAAE,iBAAgB;QAC/C,GAAG,WAAW;IAChB,GACG,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;AACJ;AACO,MAAM,YAAY;IACvB,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,GAAG,CAAE,UAC7B,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACJ;AACO,MAAM,aAAa;IACxB,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,GAAG,CAAE,WAC7B,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACJ","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/UserForm/index.tsx"],"sourcesContent":["import FormItem from \"antd/es/form/FormItem\"\r\n\r\nimport { Form, FormProps, Input } from \"antd\"\r\n\r\nexport const UserForm: React.FC<FormProps> = ({ ...props }) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        {...props}\r\n        layout='vertical'\r\n      >\r\n        <FormItem\r\n          label={\"Логин\"}\r\n          name='login'\r\n          required\r\n        >\r\n          <Input\r\n            type='email'\r\n            placeholder='username@gmail.com'\r\n          />\r\n        </FormItem>\r\n        <FormItem\r\n          label={\"ФИО\"}\r\n          name='name'\r\n          required\r\n        >\r\n          <Input\r\n            type='text'\r\n            placeholder='Иванов Иван Иванович'\r\n          />\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;;;;AAEO,MAAM,WAAgC;QAAC,EAAE,GAAG,OAAO;IACxD,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI;YACF,GAAG,KAAK;YACT,QAAO;;8BAEP,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;8BAER,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;;;;;;;;;;;8BAGhB,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;8BAER,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;;;;;;;;;;;;;;;;;;AAMxB;KA9Ba","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/PasswordForm/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Form, FormProps, Input } from \"antd\"\r\n\r\nexport const PasswordForm: React.FC<FormProps> = ({ ...props }) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        {...props}\r\n        layout='vertical'\r\n      >\r\n        <Form.Item\r\n          name={\"password\"}\r\n          label={\"Пароль\"}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста, введите пароль\",\r\n              min: 6,\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            minLength={6}\r\n            type='password'\r\n            placeholder='*********'\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={\"repeatPassword\"}\r\n          label={\"Повторите пароль\"}\r\n          dependencies={[\"password\"]}\r\n          required\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve()\r\n                }\r\n                return Promise.reject(new Error(\"Пароли не совпадают\"))\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            type='password'\r\n            placeholder='*********'\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAIO,MAAM,eAAoC;QAAC,EAAE,GAAG,OAAO;IAC5D,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI;YACF,GAAG,KAAK;YACT,QAAO;;8BAEP,6LAAC,iLAAA,CAAA,OAAI,CAAC,IAAI;oBACR,MAAM;oBACN,OAAO;oBACP,QAAQ;oBACR,OAAO;wBACL;4BACE,UAAU;4BACV,SAAS;4BACT,KAAK;wBACP;qBACD;8BAED,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,WAAW;wBACX,MAAK;wBACL,aAAY;;;;;;;;;;;8BAGhB,6LAAC,iLAAA,CAAA,OAAI,CAAC,IAAI;oBACR,MAAM;oBACN,OAAO;oBACP,cAAc;wBAAC;qBAAW;oBAC1B,QAAQ;oBACR,OAAO;wBACL;4BACE,UAAU;wBACZ;wBACA;gCAAC,EAAE,aAAa,EAAE;mCAAM;gCACtB,WAAU,CAAC,EAAE,KAAK;oCAChB,IAAI,CAAC,SAAS,cAAc,gBAAgB,OAAO;wCACjD,OAAO,QAAQ,OAAO;oCACxB;oCACA,OAAO,QAAQ,MAAM,CAAC,IAAI,MAAM;gCAClC;4BACF;;qBACD;8BAED,cAAA,6LAAC,mLAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;;;;;;;;;;;;;;;;;;AAMxB;KApDa","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/entities/GroupSelect/api/index.ts"],"sourcesContent":["import { AxiosInstance } from \"../../../shared/api\"\r\nimport { GroupsPayload, GroupsResponse } from \"../types\"\r\n\r\nexport const getGroups = async (credentials: GroupsPayload): Promise<GroupsResponse[]> => {\r\n  return await AxiosInstance.get(`groups`, { params: credentials })\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      return error\r\n    })\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,YAAY,OAAO;IAC9B,OAAO,MAAM,gIAAA,CAAA,gBAAa,CAAC,GAAG,CAAE,UAAS;QAAE,QAAQ;IAAY,GAC5D,IAAI,CAAC,CAAA;QACJ,OAAO,SAAS,IAAI;IACtB,GACC,KAAK,CAAC,CAAA;QACL,OAAO;IACT;AACJ","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/entities/GroupSelect/ui/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Select, SelectProps } from \"antd\"\r\nimport React, { useDeferredValue, useEffect, useState } from \"react\"\r\nimport { GroupsResponse } from \"../types\"\r\nimport { getGroups } from \"../api\"\r\n\r\ninterface GroupSelectProps extends SelectProps {\r\n  courseId?: string\r\n}\r\n\r\nexport const GroupSelect: React.FC<GroupSelectProps> = ({ courseId, ...props }) => {\r\n  const [data, setData] = useState<GroupsResponse[]>([])\r\n  const [identifier, setIdentifier] = useState<string>(\"\")\r\n  const defferedIdentifier = useDeferredValue(identifier)\r\n  const [filters, setFilters] = useState<{ offset: number; limit: number; courseId?: string }>({\r\n    limit: 100,\r\n    offset: 0,\r\n    courseId: courseId,\r\n  })\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n\r\n  const fetchGroups = async () => {\r\n    setIsLoading(true)\r\n    getGroups({\r\n      limit: filters.limit,\r\n      offset: filters.offset,\r\n      courseId: filters.courseId, // Assuming courseId is passed as a prop\r\n      identifier: defferedIdentifier, // Assuming identifier is passed as a prop\r\n    })\r\n      .then(response => {\r\n        setData(response)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching groups:\", error)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchGroups()\r\n  }, [])\r\n\r\n  return (\r\n    <Select\r\n      loading={isLoading}\r\n      {...props}\r\n      showSearch\r\n      virtual\r\n      onSearch={setIdentifier}\r\n      options={data.map(group => ({\r\n        label: group.identifier,\r\n        value: group.id,\r\n      }))}\r\n    />\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAWO,MAAM,cAA0C;QAAC,EAAE,QAAQ,EAAE,GAAG,OAAO;;IAC5E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,mBAAgB,AAAD,EAAE;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwD;QAC3F,OAAO;QACP,QAAQ;QACR,UAAU;IACZ;IACA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,MAAM,cAAc;QAClB,aAAa;QACb,CAAA,GAAA,iJAAA,CAAA,YAAS,AAAD,EAAE;YACR,OAAO,QAAQ,KAAK;YACpB,QAAQ,QAAQ,MAAM;YACtB,UAAU,QAAQ,QAAQ;YAC1B,YAAY;QACd,GACG,IAAI,CAAC,CAAA;YACJ,QAAQ;QACV,GACC,KAAK,CAAC,CAAA;YACL,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,GACC,OAAO,CAAC;YACP,aAAa;QACf;IACJ;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG,EAAE;IAEL,qBACE,6LAAC,qLAAA,CAAA,SAAM;QACL,SAAS;QACR,GAAG,KAAK;QACT,UAAU;QACV,OAAO;QACP,UAAU;QACV,SAAS,KAAK,GAAG,CAAC,CAAA,QAAS,CAAC;gBAC1B,OAAO,MAAM,UAAU;gBACvB,OAAO,MAAM,EAAE;YACjB,CAAC;;;;;;AAGP;GA/Ca;;QAGgB,6JAAA,CAAA,mBAAgB;;;KAHhC","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/DataForm/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport FormItem from \"antd/es/form/FormItem\"\r\n\r\nimport { Form, FormProps, Input, Select } from \"antd\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { CourseWithoutUsers, GroupWithoutUsers } from \"../../types\"\r\nimport { getCourses, getGroups } from \"../../api\"\r\nimport { GroupSelect } from \"../../../../entities/GroupSelect/ui\"\r\n\r\nexport const DataUserForm: React.FC<FormProps> = ({ ...props }) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        {...props}\r\n        layout='vertical'\r\n      >\r\n        <FormItem\r\n          label={\"Курс\"}\r\n          name='course'\r\n          required\r\n        >\r\n          <GroupSelect />\r\n        </FormItem>\r\n        <FormItem\r\n          label={\"Группа\"}\r\n          name='groups'\r\n          required\r\n          dependencies={[\"course\"]}\r\n        >\r\n          <GroupSelect />\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAIA;AARA;;;;;AAUO,MAAM,eAAoC;QAAC,EAAE,GAAG,OAAO;IAC5D,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI;YACF,GAAG,KAAK;YACT,QAAO;;8BAEP,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;8BAER,cAAA,6LAAC,iJAAA,CAAA,cAAW;;;;;;;;;;8BAEd,6LAAC,0JAAA,CAAA,UAAQ;oBACP,OAAO;oBACP,MAAK;oBACL,QAAQ;oBACR,cAAc;wBAAC;qBAAS;8BAExB,cAAA,6LAAC,iJAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;AAKtB;KAzBa","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///D:/work/sickdays/front/src/features/RegisterUser/ui/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"antd/es/form/Form\"\r\nimport { Button, Form, message } from \"antd\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport { RoutesEnum } from \"../../../shared/router/routesEnum\"\r\nimport { RegisterCredentials } from \"../types\"\r\nimport { registerRequest } from \"../api\"\r\nimport { LeftOutlined } from \"@ant-design/icons\"\r\nimport { UserForm } from \"./UserForm\"\r\nimport { PasswordForm } from \"./PasswordForm\"\r\nimport { DataUserForm } from \"./DataForm\"\r\n\r\nconst steps = [\"userForm\", \"dataForm\", \"passwordForm\"] as const\r\ntype StepName = (typeof steps)[number]\r\n\r\nexport const RegisterUserUI = () => {\r\n  const [form] = Form.useForm<RegisterCredentials>()\r\n  const [step, setStep] = useState<StepName>(\"userForm\")\r\n  const [loading, setLoading] = useState(false)\r\n  const router = useRouter()\r\n\r\n  const goBack = () => {\r\n    const idx = steps.indexOf(step)\r\n    if (idx > 0) setStep(steps[idx - 1])\r\n  }\r\n\r\n  const handleFinish = async (finishedName: string) => {\r\n    const payload = await form.validateFields()\r\n    if (finishedName === \"passwordForm\") {\r\n      try {\r\n        setLoading(true)\r\n        await registerRequest(payload)\r\n        router.push(RoutesEnum.HOME)\r\n      } catch (e: any) {\r\n        if (e?.errorFields) return // validation errors\r\n        message.error(e?.message || \"Ошибка регистрации\")\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    } else {\r\n      const idx = steps.indexOf(finishedName as StepName)\r\n      setStep(steps[idx + 1])\r\n      form.setFieldsValue({ ...payload })\r\n    }\r\n  }\r\n\r\n  const submitCurrent = () => {\r\n    form.submit()\r\n    console.log(form.getFieldsValue())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Provider\r\n        onFormFinish={name => {\r\n          handleFinish(name as string)\r\n        }}\r\n      >\r\n        {step !== \"userForm\" && (\r\n          <Button\r\n            onClick={goBack}\r\n            icon={<LeftOutlined />}\r\n          />\r\n        )}\r\n\r\n        {step === \"userForm\" && (\r\n          <UserForm\r\n            form={form}\r\n            name='userForm'\r\n          />\r\n        )}\r\n        {step === \"dataForm\" && (\r\n          <DataUserForm\r\n            form={form}\r\n            name='dataForm'\r\n          />\r\n        )}\r\n        {step === \"passwordForm\" && (\r\n          <PasswordForm\r\n            form={form}\r\n            name='passwordForm'\r\n          />\r\n        )}\r\n\r\n        <Button\r\n          type='primary'\r\n          block\r\n          loading={loading}\r\n          onClick={submitCurrent}\r\n        >\r\n          {step === \"passwordForm\" ? \"Зарегистрироваться\" : \"Далее\"}\r\n        </Button>\r\n      </Form.Provider>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAZA;;;;;;;;;;AAcA,MAAM,QAAQ;IAAC;IAAY;IAAY;CAAe;AAG/C,MAAM,iBAAiB;;IAC5B,MAAM,CAAC,KAAK,GAAG,iLAAA,CAAA,OAAI,CAAC,OAAO;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,SAAS;QACb,MAAM,MAAM,MAAM,OAAO,CAAC;QAC1B,IAAI,MAAM,GAAG,QAAQ,KAAK,CAAC,MAAM,EAAE;IACrC;IAEA,MAAM,eAAe,OAAO;QAC1B,MAAM,UAAU,MAAM,KAAK,cAAc;QACzC,IAAI,iBAAiB,gBAAgB;YACnC,IAAI;gBACF,WAAW;gBACX,MAAM,CAAA,GAAA,mJAAA,CAAA,kBAAe,AAAD,EAAE;gBACtB,OAAO,IAAI,CAAC,wIAAA,CAAA,aAAU,CAAC,IAAI;YAC7B,EAAE,OAAO,GAAQ;gBACf,IAAI,cAAA,wBAAA,EAAG,WAAW,EAAE,QAAO,oBAAoB;gBAC/C,uLAAA,CAAA,UAAO,CAAC,KAAK,CAAC,CAAA,cAAA,wBAAA,EAAG,OAAO,KAAI;YAC9B,SAAU;gBACR,WAAW;YACb;QACF,OAAO;YACL,MAAM,MAAM,MAAM,OAAO,CAAC;YAC1B,QAAQ,KAAK,CAAC,MAAM,EAAE;YACtB,KAAK,cAAc,CAAC;gBAAE,GAAG,OAAO;YAAC;QACnC;IACF;IAEA,MAAM,gBAAgB;QACpB,KAAK,MAAM;QACX,QAAQ,GAAG,CAAC,KAAK,cAAc;IACjC;IAEA,qBACE;kBACE,cAAA,6LAAC,iLAAA,CAAA,OAAI,CAAC,QAAQ;YACZ,cAAc,CAAA;gBACZ,aAAa;YACf;;gBAEC,SAAS,4BACR,6LAAC,qMAAA,CAAA,SAAM;oBACL,SAAS;oBACT,oBAAM,6LAAC,qNAAA,CAAA,eAAY;;;;;;;;;;gBAItB,SAAS,4BACR,6LAAC,8JAAA,CAAA,WAAQ;oBACP,MAAM;oBACN,MAAK;;;;;;gBAGR,SAAS,4BACR,6LAAC,8JAAA,CAAA,eAAY;oBACX,MAAM;oBACN,MAAK;;;;;;gBAGR,SAAS,gCACR,6LAAC,kKAAA,CAAA,eAAY;oBACX,MAAM;oBACN,MAAK;;;;;;8BAIT,6LAAC,qMAAA,CAAA,SAAM;oBACL,MAAK;oBACL,KAAK;oBACL,SAAS;oBACT,SAAS;8BAER,SAAS,iBAAiB,uBAAuB;;;;;;;;;;;;;AAK5D;GAhFa;;QACI,iLAAA,CAAA,OAAI,CAAC;QAGL,qIAAA,CAAA,YAAS;;;KAJb","debugId":null}}]
}